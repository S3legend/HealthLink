{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\ENSA_5eme\\\\healthlink_frontend\\\\src\\\\Pages\\\\PatientProfilePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DashPatient from \"../Components/DashPatient\";\nimport ProfileEditForm from \"../Components/ProfileEditForm\";\nimport \"../Styles/DashPatient.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientProfilePage = () => {\n  _s();\n  // Mock data for the patient profile\n  const mockPatient = {\n    id: 1,\n    firstName: \"John\",\n    lastName: \"Doe\",\n    email: \"john.doe@example.com\",\n    phone: \"1234567890\",\n    address: \"123 Main Street\",\n    city: \"Casablanca\",\n    country: \"Morocco\"\n  };\n  const [patient, setPatient] = useState(mockPatient);\n  const [isEditing, setIsEditing] = useState(false);\n  const handleEdit = () => setIsEditing(true);\n  const handleSave = updatedData => {\n    setPatient(updatedData); // Update the patient data locally\n    setIsEditing(false);\n  };\n  const handleCancel = () => setIsEditing(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-profile-page\",\n    children: isEditing ? /*#__PURE__*/_jsxDEV(ProfileEditForm, {\n      patient: patient,\n      onSave: handleSave,\n      onCancel: handleCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DashPatient, {\n      patient: patient,\n      onEdit: handleEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientProfilePage, \"gLvWAS3UhxXEG54PKQ88mfqNrRs=\");\n_c = PatientProfilePage;\nexport default PatientProfilePage;\nvar _c;\n$RefreshReg$(_c, \"PatientProfilePage\");","map":{"version":3,"names":["React","useState","DashPatient","ProfileEditForm","jsxDEV","_jsxDEV","PatientProfilePage","_s","mockPatient","id","firstName","lastName","email","phone","address","city","country","patient","setPatient","isEditing","setIsEditing","handleEdit","handleSave","updatedData","handleCancel","className","children","onSave","onCancel","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/ENSA_5eme/healthlink_frontend/src/Pages/PatientProfilePage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport DashPatient from \"../Components/DashPatient\";\nimport ProfileEditForm from \"../Components/ProfileEditForm\";\nimport \"../Styles/DashPatient.css\";\n\nconst PatientProfilePage = () => {\n  // Mock data for the patient profile\n  const mockPatient = {\n    id: 1,\n    firstName: \"John\",\n    lastName: \"Doe\",\n    email: \"john.doe@example.com\",\n    phone: \"1234567890\",\n    address: \"123 Main Street\",\n    city: \"Casablanca\",\n    country: \"Morocco\",\n  };\n\n  const [patient, setPatient] = useState(mockPatient);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleEdit = () => setIsEditing(true);\n\n  const handleSave = (updatedData) => {\n    setPatient(updatedData); // Update the patient data locally\n    setIsEditing(false);\n  };\n\n  const handleCancel = () => setIsEditing(false);\n\n  return (\n    <div className=\"patient-profile-page\">\n      {isEditing ? (\n        <ProfileEditForm\n          patient={patient}\n          onSave={handleSave}\n          onCancel={handleCancel}\n        />\n      ) : (\n        <DashPatient patient={patient} onEdit={handleEdit} />\n      )}\n    </div>\n  );\n};\n\nexport default PatientProfilePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B;EACA,MAAMC,WAAW,GAAG;IAClBC,EAAE,EAAE,CAAC;IACLC,SAAS,EAAE,MAAM;IACjBC,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE,sBAAsB;IAC7BC,KAAK,EAAE,YAAY;IACnBC,OAAO,EAAE,iBAAiB;IAC1BC,IAAI,EAAE,YAAY;IAClBC,OAAO,EAAE;EACX,CAAC;EAED,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAACO,WAAW,CAAC;EACnD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMoB,UAAU,GAAGA,CAAA,KAAMD,YAAY,CAAC,IAAI,CAAC;EAE3C,MAAME,UAAU,GAAIC,WAAW,IAAK;IAClCL,UAAU,CAACK,WAAW,CAAC,CAAC,CAAC;IACzBH,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMI,YAAY,GAAGA,CAAA,KAAMJ,YAAY,CAAC,KAAK,CAAC;EAE9C,oBACEf,OAAA;IAAKoB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,EAClCP,SAAS,gBACRd,OAAA,CAACF,eAAe;MACdc,OAAO,EAAEA,OAAQ;MACjBU,MAAM,EAAEL,UAAW;MACnBM,QAAQ,EAAEJ;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,gBAEF3B,OAAA,CAACH,WAAW;MAACe,OAAO,EAAEA,OAAQ;MAACgB,MAAM,EAAEZ;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACrD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzB,EAAA,CAtCID,kBAAkB;AAAA4B,EAAA,GAAlB5B,kBAAkB;AAwCxB,eAAeA,kBAAkB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\essam\\\\Downloads\\\\Appointment\\\\HealthLink\\\\appointment-frontend\\\\src\\\\pages\\\\Patient.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/Patient.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Patient = () => {\n  _s();\n  const [patient, setPatient] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    address: \"\"\n  });\n\n  // Fetch patient data from the backend on component mount\n  useEffect(() => {\n    axios.get(\"/api/patient\").then(response => setPatient(response.data)).catch(error => console.error(\"Error fetching patient data:\", error));\n  }, []);\n\n  // Update patient information in the backend\n  const handleUpdate = () => {\n    axios.put(\"/api/patient\", patient).then(() => alert(\"Profile updated successfully!\")).catch(err => console.error(\"Error updating profile:\", err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Patient Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: patient.name,\n          onChange: e => setPatient({\n            ...patient,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: patient.email,\n          onChange: e => setPatient({\n            ...patient,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Phone:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          value: patient.phone,\n          onChange: e => setPatient({\n            ...patient,\n            phone: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: patient.address,\n          onChange: e => setPatient({\n            ...patient,\n            address: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleUpdate,\n        children: \"Update Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Patient, \"m1iiEujqsXFMOZHSz15N+ZVksxk=\");\n_c = Patient;\nexport default Patient;\nvar _c;\n$RefreshReg$(_c, \"Patient\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Patient","_s","patient","setPatient","name","email","phone","address","get","then","response","data","catch","error","console","handleUpdate","put","alert","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/essam/Downloads/Appointment/HealthLink/appointment-frontend/src/pages/Patient.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styles/Patient.css\";\r\n\r\nconst Patient = () => {\r\n    const [patient, setPatient] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        address: \"\",\r\n    });\r\n\r\n    // Fetch patient data from the backend on component mount\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"/api/patient\")\r\n            .then((response) => setPatient(response.data))\r\n            .catch((error) => console.error(\"Error fetching patient data:\", error));\r\n    }, []);\r\n\r\n    // Update patient information in the backend\r\n    const handleUpdate = () => {\r\n        axios\r\n            .put(\"/api/patient\", patient)\r\n            .then(() => alert(\"Profile updated successfully!\"))\r\n            .catch((err) => console.error(\"Error updating profile:\", err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"patient-page\">\r\n            <h2>Patient Information</h2>\r\n            <form>\r\n                <label>\r\n                    Name:\r\n                    <input\r\n                        type=\"text\"\r\n                        value={patient.name}\r\n                        onChange={(e) => setPatient({ ...patient, name: e.target.value })}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Email:\r\n                    <input\r\n                        type=\"email\"\r\n                        value={patient.email}\r\n                        onChange={(e) => setPatient({ ...patient, email: e.target.value })}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Phone:\r\n                    <input\r\n                        type=\"tel\"\r\n                        value={patient.phone}\r\n                        onChange={(e) => setPatient({ ...patient, phone: e.target.value })}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Address:\r\n                    <input\r\n                        type=\"text\"\r\n                        value={patient.address}\r\n                        onChange={(e) =>\r\n                            setPatient({ ...patient, address: e.target.value })\r\n                        }\r\n                    />\r\n                </label>\r\n                <button type=\"button\" onClick={handleUpdate}>\r\n                    Update Information\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Patient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\essam\\\\Downloads\\\\Appointment\\\\appointment-frontend\\\\src\\\\pages\\\\AppointmentPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Filters from \"../components/Filters\";\nimport DoctorList from \"../components/DoctorList\";\nimport AppointmentGrid from \"../components/AppointmentGrid\";\nimport doctorData from \"../mock/doctorData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentPage = () => {\n  _s();\n  const [filters, setFilters] = useState({});\n  const [filteredDoctors, setFilteredDoctors] = useState(doctorData);\n  const [availability, setAvailability] = useState([]);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const handleFilterChange = (key, value) => {\n    const updatedFilters = {\n      ...filters,\n      [key]: value\n    };\n    setFilters(updatedFilters);\n\n    // Filter doctors based on specialty, city, or type\n    const filtered = doctorData.filter(doctor => {\n      const matchesCity = updatedFilters.city ? doctor.city === updatedFilters.city : true;\n      const matchesSpecialty = updatedFilters.specialty ? doctor.specialty === updatedFilters.specialty : true;\n      return matchesCity && matchesSpecialty;\n    });\n    setFilteredDoctors(filtered);\n  };\n  const fetchAvailability = doctorId => {\n    const doctor = doctorData.find(doc => doc.id === doctorId);\n    setAvailability(doctor.availability);\n    setSelectedDoctor(doctorId);\n  };\n  const handleSlotSelect = slot => {\n    alert(`You selected slot at ${slot.time}`);\n    // Simulate booking logic here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Filters, {\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DoctorList, {\n      doctors: filteredDoctors,\n      onDoctorSelect: fetchAvailability\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), selectedDoctor && /*#__PURE__*/_jsxDEV(AppointmentGrid, {\n      availability: availability,\n      onSlotSelect: handleSlotSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentPage, \"Wu9JeSOJanHIlc38dExYy9M5CiA=\");\n_c = AppointmentPage;\nexport default AppointmentPage;\nvar _c;\n$RefreshReg$(_c, \"AppointmentPage\");","map":{"version":3,"names":["React","useState","Filters","DoctorList","AppointmentGrid","doctorData","jsxDEV","_jsxDEV","AppointmentPage","_s","filters","setFilters","filteredDoctors","setFilteredDoctors","availability","setAvailability","selectedDoctor","setSelectedDoctor","handleFilterChange","key","value","updatedFilters","filtered","filter","doctor","matchesCity","city","matchesSpecialty","specialty","fetchAvailability","doctorId","find","doc","id","handleSlotSelect","slot","alert","time","children","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","doctors","onDoctorSelect","onSlotSelect","_c","$RefreshReg$"],"sources":["C:/Users/essam/Downloads/Appointment/appointment-frontend/src/pages/AppointmentPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Filters from \"../components/Filters\";\r\nimport DoctorList from \"../components/DoctorList\";\r\nimport AppointmentGrid from \"../components/AppointmentGrid\";\r\nimport doctorData from \"../mock/doctorData\";\r\n\r\nconst AppointmentPage = () => {\r\n  const [filters, setFilters] = useState({});\r\n  const [filteredDoctors, setFilteredDoctors] = useState(doctorData);\r\n  const [availability, setAvailability] = useState([]);\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n\r\n  const handleFilterChange = (key, value) => {\r\n    const updatedFilters = { ...filters, [key]: value };\r\n    setFilters(updatedFilters);\r\n\r\n    // Filter doctors based on specialty, city, or type\r\n    const filtered = doctorData.filter((doctor) => {\r\n      const matchesCity = updatedFilters.city\r\n        ? doctor.city === updatedFilters.city\r\n        : true;\r\n      const matchesSpecialty = updatedFilters.specialty\r\n        ? doctor.specialty === updatedFilters.specialty\r\n        : true;\r\n      return matchesCity && matchesSpecialty;\r\n    });\r\n\r\n    setFilteredDoctors(filtered);\r\n  };\r\n\r\n  const fetchAvailability = (doctorId) => {\r\n    const doctor = doctorData.find((doc) => doc.id === doctorId);\r\n    setAvailability(doctor.availability);\r\n    setSelectedDoctor(doctorId);\r\n  };\r\n\r\n  const handleSlotSelect = (slot) => {\r\n    alert(`You selected slot at ${slot.time}`);\r\n    // Simulate booking logic here\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Filters onFilterChange={handleFilterChange} />\r\n      <DoctorList doctors={filteredDoctors} onDoctorSelect={fetchAvailability} />\r\n      {selectedDoctor && (\r\n        <AppointmentGrid\r\n          availability={availability}\r\n          onSlotSelect={handleSlotSelect}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppointmentPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,UAAU,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAACI,UAAU,CAAC;EAClE,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMiB,kBAAkB,GAAGA,CAACC,GAAG,EAAEC,KAAK,KAAK;IACzC,MAAMC,cAAc,GAAG;MAAE,GAAGX,OAAO;MAAE,CAACS,GAAG,GAAGC;IAAM,CAAC;IACnDT,UAAU,CAACU,cAAc,CAAC;;IAE1B;IACA,MAAMC,QAAQ,GAAGjB,UAAU,CAACkB,MAAM,CAAEC,MAAM,IAAK;MAC7C,MAAMC,WAAW,GAAGJ,cAAc,CAACK,IAAI,GACnCF,MAAM,CAACE,IAAI,KAAKL,cAAc,CAACK,IAAI,GACnC,IAAI;MACR,MAAMC,gBAAgB,GAAGN,cAAc,CAACO,SAAS,GAC7CJ,MAAM,CAACI,SAAS,KAAKP,cAAc,CAACO,SAAS,GAC7C,IAAI;MACR,OAAOH,WAAW,IAAIE,gBAAgB;IACxC,CAAC,CAAC;IAEFd,kBAAkB,CAACS,QAAQ,CAAC;EAC9B,CAAC;EAED,MAAMO,iBAAiB,GAAIC,QAAQ,IAAK;IACtC,MAAMN,MAAM,GAAGnB,UAAU,CAAC0B,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKH,QAAQ,CAAC;IAC5Df,eAAe,CAACS,MAAM,CAACV,YAAY,CAAC;IACpCG,iBAAiB,CAACa,QAAQ,CAAC;EAC7B,CAAC;EAED,MAAMI,gBAAgB,GAAIC,IAAI,IAAK;IACjCC,KAAK,CAAC,wBAAwBD,IAAI,CAACE,IAAI,EAAE,CAAC;IAC1C;EACF,CAAC;EAED,oBACE9B,OAAA;IAAA+B,QAAA,gBACE/B,OAAA,CAACL,OAAO;MAACqC,cAAc,EAAErB;IAAmB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/CpC,OAAA,CAACJ,UAAU;MAACyC,OAAO,EAAEhC,eAAgB;MAACiC,cAAc,EAAEhB;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC1E3B,cAAc,iBACbT,OAAA,CAACH,eAAe;MACdU,YAAY,EAAEA,YAAa;MAC3BgC,YAAY,EAAEZ;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClC,EAAA,CA/CID,eAAe;AAAAuC,EAAA,GAAfvC,eAAe;AAiDrB,eAAeA,eAAe;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
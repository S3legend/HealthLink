{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\essam\\\\Downloads\\\\Appointment\\\\HealthLink\\\\appointment-frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Sidebar from '../components/Sidebar';\nimport ProfileCard from '../components/ProfileCard';\nimport MedicalRecordCard from '../components/MedicalRecordCard';\nimport AppointmentCard from '../components/AppointmentCard';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [patient, setPatient] = useState(null);\n  const [medicalRecords, setMedicalRecords] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  useEffect(() => {\n    const patientId = 'patient123'; // This would come from authentication\n    axios.get(`/api/patient/profile?patientId=${patientId}`).then(response => setPatient(response.data)).catch(error => console.error(error));\n    axios.get(`/api/patient/medicalRecords?patientId=${patientId}`).then(response => setMedicalRecords(response.data)).catch(error => console.error(error));\n    axios.get(`/api/patient/appointments?patientId=${patientId}`).then(response => setAppointments(response.data)).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Patient Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), patient && /*#__PURE__*/_jsxDEV(ProfileCard, {\n        patient: patient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Medical Records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), medicalRecords.map(record => /*#__PURE__*/_jsxDEV(MedicalRecordCard, {\n        record: record\n      }, record.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), appointments.map(appointment => /*#__PURE__*/_jsxDEV(AppointmentCard, {\n        appointment: appointment\n      }, appointment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"PEKdsbJlCGth0+Lygpwb86zmylg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Sidebar","ProfileCard","MedicalRecordCard","AppointmentCard","jsxDEV","_jsxDEV","Dashboard","_s","patient","setPatient","medicalRecords","setMedicalRecords","appointments","setAppointments","patientId","get","then","response","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","record","id","appointment","_c","$RefreshReg$"],"sources":["C:/Users/essam/Downloads/Appointment/HealthLink/appointment-frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Sidebar from '../components/Sidebar';\r\nimport ProfileCard from '../components/ProfileCard';\r\nimport MedicalRecordCard from '../components/MedicalRecordCard';\r\nimport AppointmentCard from '../components/AppointmentCard';\r\nimport '../styles/Dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n    const [patient, setPatient] = useState(null);\r\n    const [medicalRecords, setMedicalRecords] = useState([]);\r\n    const [appointments, setAppointments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const patientId = 'patient123';  // This would come from authentication\r\n        axios.get(`/api/patient/profile?patientId=${patientId}`)\r\n            .then(response => setPatient(response.data))\r\n            .catch(error => console.error(error));\r\n\r\n        axios.get(`/api/patient/medicalRecords?patientId=${patientId}`)\r\n            .then(response => setMedicalRecords(response.data))\r\n            .catch(error => console.error(error));\r\n\r\n        axios.get(`/api/patient/appointments?patientId=${patientId}`)\r\n            .then(response => setAppointments(response.data))\r\n            .catch(error => console.error(error));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <Sidebar />\r\n            <div className=\"dashboard-content\">\r\n                <h1>Patient Dashboard</h1>\r\n                {patient && <ProfileCard patient={patient} />}\r\n                <h2>Medical Records</h2>\r\n                {medicalRecords.map(record => (\r\n                    <MedicalRecordCard key={record.id} record={record} />\r\n                ))}\r\n                <h2>Appointments</h2>\r\n                {appointments.map(appointment => (\r\n                    <AppointmentCard key={appointment.id} appointment={appointment} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,MAAMgB,SAAS,GAAG,YAAY,CAAC,CAAE;IACjCf,KAAK,CAACgB,GAAG,CAAC,kCAAkCD,SAAS,EAAE,CAAC,CACnDE,IAAI,CAACC,QAAQ,IAAIR,UAAU,CAACQ,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC3CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;IAEzCrB,KAAK,CAACgB,GAAG,CAAC,yCAAyCD,SAAS,EAAE,CAAC,CAC1DE,IAAI,CAACC,QAAQ,IAAIN,iBAAiB,CAACM,QAAQ,CAACC,IAAI,CAAC,CAAC,CAClDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;IAEzCrB,KAAK,CAACgB,GAAG,CAAC,uCAAuCD,SAAS,EAAE,CAAC,CACxDE,IAAI,CAACC,QAAQ,IAAIJ,eAAe,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC,CAChDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIf,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBlB,OAAA,CAACL,OAAO;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXtB,OAAA;MAAKiB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAC9BlB,OAAA;QAAAkB,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACzBnB,OAAO,iBAAIH,OAAA,CAACJ,WAAW;QAACO,OAAO,EAAEA;MAAQ;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7CtB,OAAA;QAAAkB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACvBjB,cAAc,CAACkB,GAAG,CAACC,MAAM,iBACtBxB,OAAA,CAACH,iBAAiB;QAAiB2B,MAAM,EAAEA;MAAO,GAA1BA,MAAM,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CACvD,CAAC,eACFtB,OAAA;QAAAkB,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpBf,YAAY,CAACgB,GAAG,CAACG,WAAW,iBACzB1B,OAAA,CAACF,eAAe;QAAsB4B,WAAW,EAAEA;MAAY,GAAzCA,WAAW,CAACD,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6B,CACpE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACpB,EAAA,CArCID,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\essam\\\\Downloads\\\\Appointment\\\\HealthLink\\\\appointment-frontend\\\\src\\\\pages\\\\DashboardPatient.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProfileHeader from '../components/ProfileHeader';\nimport PatientInfoTab from '../components/PatientInfoTab';\nimport MedicalRecordTab from '../components/MedicalRecordTab';\nimport Sidebar from '../components/Sidebar';\nimport { getPatientProfile } from '../services/patientApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DashboardPatient({\n  patientId\n}) {\n  _s();\n  const [activeTab, setActiveTab] = useState('info');\n  const [profile, setProfile] = useState(null);\n  useEffect(() => {\n    // Fetch patient profile on component mount\n    const fetchProfile = async () => {\n      const data = await getPatientProfile(patientId);\n      setProfile(data);\n    };\n    fetchProfile();\n  }, [patientId]);\n  const handleTabChange = tab => {\n    setActiveTab(tab);\n  };\n  const handleProfileUpdate = updatedData => {\n    setProfile({\n      ...profile,\n      ...updatedData\n    });\n  };\n  if (!profile) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(ProfileHeader, {\n        patientId: patientId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabChange('info'),\n          children: \"Informations du patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabChange('medical'),\n          children: \"Dossier M\\xE9dical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), activeTab === 'info' && /*#__PURE__*/_jsxDEV(PatientInfoTab, {\n        profile: profile,\n        handleProfileUpdate: handleProfileUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), activeTab === 'medical' && /*#__PURE__*/_jsxDEV(MedicalRecordTab, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(DashboardPatient, \"M2jPy7tD4w4YMv6UqBVv5Zc8oio=\");\n_c = DashboardPatient;\nexport default DashboardPatient;\nvar _c;\n$RefreshReg$(_c, \"DashboardPatient\");","map":{"version":3,"names":["React","useState","useEffect","ProfileHeader","PatientInfoTab","MedicalRecordTab","Sidebar","getPatientProfile","jsxDEV","_jsxDEV","DashboardPatient","patientId","_s","activeTab","setActiveTab","profile","setProfile","fetchProfile","data","handleTabChange","tab","handleProfileUpdate","updatedData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/essam/Downloads/Appointment/HealthLink/appointment-frontend/src/pages/DashboardPatient.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ProfileHeader from '../components/ProfileHeader';\r\nimport PatientInfoTab from '../components/PatientInfoTab';\r\nimport MedicalRecordTab from '../components/MedicalRecordTab';\r\nimport Sidebar from '../components/Sidebar';\r\nimport { getPatientProfile } from '../services/patientApi';\r\n\r\nfunction DashboardPatient({ patientId }) {\r\n    const [activeTab, setActiveTab] = useState('info');\r\n    const [profile, setProfile] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch patient profile on component mount\r\n        const fetchProfile = async () => {\r\n            const data = await getPatientProfile(patientId);\r\n            setProfile(data);\r\n        };\r\n        fetchProfile();\r\n    }, [patientId]);\r\n\r\n    const handleTabChange = (tab) => {\r\n        setActiveTab(tab);\r\n    };\r\n\r\n    const handleProfileUpdate = (updatedData) => {\r\n        setProfile({ ...profile, ...updatedData });\r\n    };\r\n\r\n    if (!profile) return <div>Loading...</div>;\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <Sidebar />\r\n            <div className=\"main-content\">\r\n                <ProfileHeader patientId={patientId} />\r\n\r\n                <div className=\"tabs\">\r\n                    <button onClick={() => handleTabChange('info')}>Informations du patient</button>\r\n                    <button onClick={() => handleTabChange('medical')}>Dossier MÃ©dical</button>\r\n                </div>\r\n\r\n                {activeTab === 'info' && (\r\n                    <PatientInfoTab profile={profile} handleProfileUpdate={handleProfileUpdate} />\r\n                )}\r\n                {activeTab === 'medical' && <MedicalRecordTab />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DashboardPatient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\essam\\\\Downloads\\\\Appointment\\\\HealthLink\\\\appointment-frontend\\\\src\\\\pages\\\\DashboardPatient.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport PatientInfo from '../components/PatientInfo';\nimport MedicalRecords from '../components/MedicalRecords';\nimport Appointments from '../components/Appointments';\nimport PatientSidebar from '../components/PatientSidebar';\nimport Navbar from \"../components/PatientNavbar\";\nimport '../styles/PatientDashboard.css'; // Import CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientDashboard = () => {\n  _s();\n  const [patient, setPatient] = useState(null);\n  const [medicalRecords, setMedicalRecords] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const [activeSection, setActiveSection] = useState('patientInfo'); // Default to 'patientInfo' section\n  const [loading, setLoading] = useState(true); // Loading state to show while data is being fetched\n\n  useEffect(() => {\n    const fetchPatientInfo = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/api/patients/2'); // Correct patient ID\n        setPatient(response.data);\n      } catch (error) {\n        console.error('Error fetching patient data:', error);\n      }\n    };\n    const fetchMedicalRecords = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/api/medical-records/patient/2'); // Correct patient ID\n        setMedicalRecords(response.data);\n      } catch (error) {\n        console.error('Error fetching medical records:', error);\n      }\n    };\n    const fetchAppointments = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/api/appointments/patient/2'); // Correct patient ID\n        setAppointments(response.data);\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n      }\n    };\n    fetchPatientInfo();\n    fetchMedicalRecords();\n    fetchAppointments();\n    setLoading(false); // Set loading to false once data is fetched\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Render the selected section based on activeSection\n  const renderSection = () => {\n    switch (activeSection) {\n      case 'patientInfo':\n        return /*#__PURE__*/_jsxDEV(PatientInfo, {\n          patient: patient\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 24\n        }, this);\n      case 'medicalRecords':\n        return /*#__PURE__*/_jsxDEV(MedicalRecords, {\n          records: medicalRecords\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 24\n        }, this);\n      case 'appointments':\n        return /*#__PURE__*/_jsxDEV(Appointments, {\n          appointments: appointments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 24\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(PatientInfo, {\n          patient: patient\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 24\n        }, this);\n      // Default to patient info\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-container\",\n        children: /*#__PURE__*/_jsxDEV(PatientSidebar, {\n          setActiveSection: setActiveSection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: renderSection()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(PatientDashboard, \"dpOUA2UN0XPltnkWaau0WB91kAw=\");\n_c = PatientDashboard;\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","PatientInfo","MedicalRecords","Appointments","PatientSidebar","Navbar","jsxDEV","_jsxDEV","PatientDashboard","_s","patient","setPatient","medicalRecords","setMedicalRecords","appointments","setAppointments","activeSection","setActiveSection","loading","setLoading","fetchPatientInfo","response","get","data","error","console","fetchMedicalRecords","fetchAppointments","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderSection","records","_c","$RefreshReg$"],"sources":["C:/Users/essam/Downloads/Appointment/HealthLink/appointment-frontend/src/pages/DashboardPatient.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport PatientInfo from '../components/PatientInfo';\r\nimport MedicalRecords from '../components/MedicalRecords';\r\nimport Appointments from '../components/Appointments';\r\nimport PatientSidebar from '../components/PatientSidebar';\r\nimport Navbar from \"../components/PatientNavbar\";\r\nimport '../styles/PatientDashboard.css'; // Import CSS for styling\r\n\r\nconst PatientDashboard = () => {\r\n    const [patient, setPatient] = useState(null);\r\n    const [medicalRecords, setMedicalRecords] = useState([]);\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [activeSection, setActiveSection] = useState('patientInfo'); // Default to 'patientInfo' section\r\n    const [loading, setLoading] = useState(true); // Loading state to show while data is being fetched\r\n\r\n    useEffect(() => {\r\n        const fetchPatientInfo = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8080/api/patients/2'); // Correct patient ID\r\n                setPatient(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching patient data:', error);\r\n            }\r\n        };\r\n\r\n        const fetchMedicalRecords = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8080/api/medical-records/patient/2'); // Correct patient ID\r\n                setMedicalRecords(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching medical records:', error);\r\n            }\r\n        };\r\n\r\n        const fetchAppointments = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8080/api/appointments/patient/2'); // Correct patient ID\r\n                setAppointments(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching appointments:', error);\r\n            }\r\n        };\r\n\r\n        fetchPatientInfo();\r\n        fetchMedicalRecords();\r\n        fetchAppointments();\r\n        setLoading(false); // Set loading to false once data is fetched\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <div className=\"loading\">Loading...</div>;\r\n    }\r\n\r\n    // Render the selected section based on activeSection\r\n    const renderSection = () => {\r\n        switch (activeSection) {\r\n            case 'patientInfo':\r\n                return <PatientInfo patient={patient} />;\r\n            case 'medicalRecords':\r\n                return <MedicalRecords records={medicalRecords} />;\r\n            case 'appointments':\r\n                return <Appointments appointments={appointments} />;\r\n            default:\r\n                return <PatientInfo patient={patient} />; // Default to patient info\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"patient-dashboard\">\r\n         \r\n\r\n            <div className=\"dashboard-layout\">\r\n                {/* Sidebar on the left */}\r\n                <div className=\"sidebar-container\">\r\n                    <PatientSidebar setActiveSection={setActiveSection} />\r\n                </div>\r\n\r\n                {/* Main content area */}\r\n                <div className=\"main-content\">\r\n                    {renderSection()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
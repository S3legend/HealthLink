{"ast":null,"code":"import axios from 'axios';\n\n// Base URL for API requests\nconst API_URL = 'http://localhost:8080/api'; // Replace with your actual API base URL\n\n// Create an instance of axios with default settings\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Fetch patient profile by ID\nexport const getPatientProfile = async patientId => {\n  try {\n    const response = await api.get(`/patients/${patientId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching patient profile:', error);\n    throw error; // Rethrow the error to be handled in the component\n  }\n};\n\n// Update patient profile\nexport const updatePatientProfile = async (patientId, updatedData) => {\n  try {\n    const response = await api.put(`/patients/${patientId}`, updatedData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating patient profile:', error);\n    throw error; // Rethrow the error to be handled in the component\n  }\n};\n\n// Fetch patient medical records\nexport const getMedicalRecords = async patientId => {\n  try {\n    const response = await api.get(`/patients/${patientId}/medical-records`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching medical records:', error);\n    throw error;\n  }\n};\n\n// Fetch patient appointments\nexport const getAppointments = async patientId => {\n  try {\n    const response = await api.get(`/patients/${patientId}/appointments`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching appointments:', error);\n    throw error;\n  }\n};\n\n// Create a new appointment for a patient\nexport const createAppointment = async (patientId, appointmentData) => {\n  try {\n    const response = await api.post(`/patients/${patientId}/appointments`, appointmentData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating appointment:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","getPatientProfile","patientId","response","get","data","error","console","updatePatientProfile","updatedData","put","getMedicalRecords","getAppointments","createAppointment","appointmentData","post"],"sources":["C:/Users/essam/Downloads/Appointment/HealthLink/appointment-frontend/src/services/patientApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base URL for API requests\r\nconst API_URL = 'http://localhost:8080/api'; // Replace with your actual API base URL\r\n\r\n// Create an instance of axios with default settings\r\nconst api = axios.create({\r\n    baseURL: API_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\n// Fetch patient profile by ID\r\nexport const getPatientProfile = async (patientId) => {\r\n    try {\r\n        const response = await api.get(`/patients/${patientId}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching patient profile:', error);\r\n        throw error;  // Rethrow the error to be handled in the component\r\n    }\r\n};\r\n\r\n// Update patient profile\r\nexport const updatePatientProfile = async (patientId, updatedData) => {\r\n    try {\r\n        const response = await api.put(`/patients/${patientId}`, updatedData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error updating patient profile:', error);\r\n        throw error;  // Rethrow the error to be handled in the component\r\n    }\r\n};\r\n\r\n// Fetch patient medical records\r\nexport const getMedicalRecords = async (patientId) => {\r\n    try {\r\n        const response = await api.get(`/patients/${patientId}/medical-records`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching medical records:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Fetch patient appointments\r\nexport const getAppointments = async (patientId) => {\r\n    try {\r\n        const response = await api.get(`/patients/${patientId}/appointments`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching appointments:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Create a new appointment for a patient\r\nexport const createAppointment = async (patientId, appointmentData) => {\r\n    try {\r\n        const response = await api.post(`/patients/${patientId}/appointments`, appointmentData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error creating appointment:', error);\r\n        throw error;\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,SAAS,IAAK;EAClD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,aAAaF,SAAS,EAAE,CAAC;IACxD,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK,CAAC,CAAE;EAClB;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,oBAAoB,GAAG,MAAAA,CAAON,SAAS,EAAEO,WAAW,KAAK;EAClE,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMN,GAAG,CAACa,GAAG,CAAC,aAAaR,SAAS,EAAE,EAAEO,WAAW,CAAC;IACrE,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK,CAAC,CAAE;EAClB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,iBAAiB,GAAG,MAAOT,SAAS,IAAK;EAClD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,aAAaF,SAAS,kBAAkB,CAAC;IACxE,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMM,eAAe,GAAG,MAAOV,SAAS,IAAK;EAChD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,aAAaF,SAAS,eAAe,CAAC;IACrE,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMO,iBAAiB,GAAG,MAAAA,CAAOX,SAAS,EAAEY,eAAe,KAAK;EACnE,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMN,GAAG,CAACkB,IAAI,CAAC,aAAab,SAAS,eAAe,EAAEY,eAAe,CAAC;IACvF,OAAOX,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
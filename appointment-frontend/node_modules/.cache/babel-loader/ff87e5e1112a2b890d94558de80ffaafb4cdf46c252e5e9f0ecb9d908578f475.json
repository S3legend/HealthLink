{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\essam\\\\Downloads\\\\Appointment\\\\HealthLink\\\\appointment-frontend\\\\src\\\\pages\\\\DashboardPatient.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n// Mock data for the patient profile, medical records, and appointments\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockPatientProfile = {\n  name: 'John Doe',\n  email: 'john.doe@example.com',\n  age: 35,\n  gender: 'Male',\n  height: '180 cm',\n  weight: '75 kg'\n};\nconst mockMedicalRecords = [{\n  id: 1,\n  description: 'Annual check-up - January 2024'\n}, {\n  id: 2,\n  description: 'X-Ray results - December 2023'\n}];\nconst mockAppointments = [{\n  id: 1,\n  date: '2024-03-01',\n  doctor: 'Dr. Smith'\n}, {\n  id: 2,\n  date: '2024-04-15',\n  doctor: 'Dr. Lee'\n}];\nfunction DashboardPatient() {\n  _s();\n  const [patientProfile, setPatientProfile] = useState(null);\n  const [medicalRecords, setMedicalRecords] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(true); // Added loading state\n\n  useEffect(() => {\n    // Simulating data fetching with mock data\n    setTimeout(() => {\n      setPatientProfile(mockPatientProfile);\n      setMedicalRecords(mockMedicalRecords);\n      setAppointments(mockAppointments);\n      setLoading(false);\n    }, 1000); // Simulating a 1-second delay for loading\n  }, []);\n\n  // Show loading screen while data is \"loading\"\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Patient Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), patientProfile && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", patientProfile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", patientProfile.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Age: \", patientProfile.age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gender: \", patientProfile.gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Height: \", patientProfile.height]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Weight: \", patientProfile.weight]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Medical Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), medicalRecords.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: medicalRecords.map(record => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: record.description\n      }, record.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No medical records available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), appointments.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [appointment.date, \" with \", appointment.doctor]\n      }, appointment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No appointments available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(DashboardPatient, \"3u40vVk+23xVOh/jdfZiWZFDoA8=\");\n_c = DashboardPatient;\nexport default DashboardPatient;\nvar _c;\n$RefreshReg$(_c, \"DashboardPatient\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","mockPatientProfile","name","email","age","gender","height","weight","mockMedicalRecords","id","description","mockAppointments","date","doctor","DashboardPatient","_s","patientProfile","setPatientProfile","medicalRecords","setMedicalRecords","appointments","setAppointments","loading","setLoading","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","record","appointment","_c","$RefreshReg$"],"sources":["C:/Users/essam/Downloads/Appointment/HealthLink/appointment-frontend/src/pages/DashboardPatient.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n// Mock data for the patient profile, medical records, and appointments\r\nconst mockPatientProfile = {\r\n    name: 'John Doe',\r\n    email: 'john.doe@example.com',\r\n    age: 35,\r\n    gender: 'Male',\r\n    height: '180 cm',\r\n    weight: '75 kg',\r\n};\r\n\r\nconst mockMedicalRecords = [\r\n    { id: 1, description: 'Annual check-up - January 2024' },\r\n    { id: 2, description: 'X-Ray results - December 2023' },\r\n];\r\n\r\nconst mockAppointments = [\r\n    { id: 1, date: '2024-03-01', doctor: 'Dr. Smith' },\r\n    { id: 2, date: '2024-04-15', doctor: 'Dr. Lee' },\r\n];\r\n\r\nfunction DashboardPatient() {\r\n    const [patientProfile, setPatientProfile] = useState(null);\r\n    const [medicalRecords, setMedicalRecords] = useState([]);\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [loading, setLoading] = useState(true); // Added loading state\r\n\r\n    useEffect(() => {\r\n        // Simulating data fetching with mock data\r\n        setTimeout(() => {\r\n            setPatientProfile(mockPatientProfile);\r\n            setMedicalRecords(mockMedicalRecords);\r\n            setAppointments(mockAppointments);\r\n            setLoading(false);\r\n        }, 1000); // Simulating a 1-second delay for loading\r\n\r\n    }, []);\r\n\r\n    // Show loading screen while data is \"loading\"\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Patient Dashboard</h1>\r\n            {patientProfile && (\r\n                <div>\r\n                    <h2>Profile</h2>\r\n                    <p>Name: {patientProfile.name}</p>\r\n                    <p>Email: {patientProfile.email}</p>\r\n                    <p>Age: {patientProfile.age}</p>\r\n                    <p>Gender: {patientProfile.gender}</p>\r\n                    <p>Height: {patientProfile.height}</p>\r\n                    <p>Weight: {patientProfile.weight}</p>\r\n                </div>\r\n            )}\r\n\r\n            <h2>Medical Records</h2>\r\n            {medicalRecords.length > 0 ? (\r\n                <ul>\r\n                    {medicalRecords.map(record => (\r\n                        <li key={record.id}>{record.description}</li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>No medical records available.</p>\r\n            )}\r\n\r\n            <h2>Appointments</h2>\r\n            {appointments.length > 0 ? (\r\n                <ul>\r\n                    {appointments.map(appointment => (\r\n                        <li key={appointment.id}>\r\n                            {appointment.date} with {appointment.doctor}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>No appointments available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DashboardPatient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
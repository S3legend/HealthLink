{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\essam\\\\Downloads\\\\Appointment\\\\appointment-frontend\\\\src\\\\components\\\\DoctorCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/DoctorCard.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DoctorCard = ({\n  doctor\n}) => {\n  _s();\n  const [currentDayIndex, setCurrentDayIndex] = useState(0); // Track the first day in the visible range\n  const [visibleSlots, setVisibleSlots] = useState(3); // Number of initially visible slots\n\n  // Generate an array of days starting from today\n  const days = Array.from({\n    length: 30\n  }, (_, index) => {\n    const date = new Date();\n    date.setDate(date.getDate() + index);\n    return {\n      date: date.toISOString().split(\"T\")[0],\n      // Format: YYYY-MM-DD\n      label: date.toLocaleDateString(\"en-US\", {\n        weekday: \"long\",\n        day: \"numeric\",\n        month: \"short\"\n      }) // Example: Monday 16 Dec\n    };\n  });\n\n  // Get the current set of three days to display\n  const visibleDays = days.slice(currentDayIndex, currentDayIndex + 3);\n  const handleNextDays = () => {\n    if (currentDayIndex + 3 < days.length) {\n      setCurrentDayIndex(currentDayIndex + 3);\n      setVisibleSlots(3); // Reset visible slots for the new range\n    }\n  };\n  const handlePreviousDays = () => {\n    if (currentDayIndex - 3 >= 0) {\n      setCurrentDayIndex(currentDayIndex - 3);\n      setVisibleSlots(3); // Reset visible slots for the previous range\n    }\n  };\n  const handleShowMoreSlots = () => {\n    setVisibleSlots(visibleSlots + 3); // Show 3 more slots\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor-profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: doctor.image || \"https://via.placeholder.com/100\" // Placeholder or dynamic image\n        ,\n        alt: \"Doctor\",\n        className: \"doctor-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: doctor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: doctor.specialty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: doctor.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"view-profile\",\n          children: \"View Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"availability\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePreviousDays,\n          disabled: currentDayIndex === 0,\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), visibleDays.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-info\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: day.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, day.date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextDays,\n          disabled: currentDayIndex + 3 >= days.length,\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slots\",\n        children: visibleDays.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-slots\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: day.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), index === 0 && currentDayIndex === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-slots\",\n            children: \"No slots available today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [doctor.availability.slice(0, visibleSlots).map(slot => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"slot\",\n              children: slot.time\n            }, `${day.date}-${slot.id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this)), visibleSlots < doctor.availability.length && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleShowMoreSlots,\n              className: \"more-slots\",\n              children: \"More...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, day.date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorCard, \"Y8j/MVtegk/kQqwfjHJZXBYYYtg=\");\n_c = DoctorCard;\nexport default DoctorCard;\nvar _c;\n$RefreshReg$(_c, \"DoctorCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","DoctorCard","doctor","_s","currentDayIndex","setCurrentDayIndex","visibleSlots","setVisibleSlots","days","Array","from","length","_","index","date","Date","setDate","getDate","toISOString","split","label","toLocaleDateString","weekday","day","month","visibleDays","slice","handleNextDays","handlePreviousDays","handleShowMoreSlots","className","children","src","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","specialty","city","onClick","disabled","map","availability","slot","time","id","_c","$RefreshReg$"],"sources":["C:/Users/essam/Downloads/Appointment/appointment-frontend/src/components/DoctorCard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/DoctorCard.css\";\r\n\r\nconst DoctorCard = ({ doctor }) => {\r\n  const [currentDayIndex, setCurrentDayIndex] = useState(0); // Track the first day in the visible range\r\n  const [visibleSlots, setVisibleSlots] = useState(3); // Number of initially visible slots\r\n\r\n  // Generate an array of days starting from today\r\n  const days = Array.from({ length: 30 }, (_, index) => {\r\n    const date = new Date();\r\n    date.setDate(date.getDate() + index);\r\n    return {\r\n      date: date.toISOString().split(\"T\")[0], // Format: YYYY-MM-DD\r\n      label: date.toLocaleDateString(\"en-US\", { weekday: \"long\", day: \"numeric\", month: \"short\" }), // Example: Monday 16 Dec\r\n    };\r\n  });\r\n\r\n  // Get the current set of three days to display\r\n  const visibleDays = days.slice(currentDayIndex, currentDayIndex + 3);\r\n\r\n  const handleNextDays = () => {\r\n    if (currentDayIndex + 3 < days.length) {\r\n      setCurrentDayIndex(currentDayIndex + 3);\r\n      setVisibleSlots(3); // Reset visible slots for the new range\r\n    }\r\n  };\r\n\r\n  const handlePreviousDays = () => {\r\n    if (currentDayIndex - 3 >= 0) {\r\n      setCurrentDayIndex(currentDayIndex - 3);\r\n      setVisibleSlots(3); // Reset visible slots for the previous range\r\n    }\r\n  };\r\n\r\n  const handleShowMoreSlots = () => {\r\n    setVisibleSlots(visibleSlots + 3); // Show 3 more slots\r\n  };\r\n\r\n  return (\r\n    <div className=\"doctor-card\">\r\n      {/* Left Section: Doctor Info */}\r\n      <div className=\"doctor-profile\">\r\n        <img\r\n          src={doctor.image || \"https://via.placeholder.com/100\"} // Placeholder or dynamic image\r\n          alt=\"Doctor\"\r\n          className=\"doctor-image\"\r\n        />\r\n        <div className=\"doctor-info\">\r\n          <h3>{doctor.name}</h3>\r\n          <p>{doctor.specialty}</p>\r\n          <p>{doctor.city}</p>\r\n          <button className=\"view-profile\">View Profile</button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Right Section: Availability */}\r\n      <div className=\"availability\">\r\n        <div className=\"day-navigation\">\r\n          <button onClick={handlePreviousDays} disabled={currentDayIndex === 0}>\r\n            &lt;\r\n          </button>\r\n          {visibleDays.map((day) => (\r\n            <div className=\"day-info\" key={day.date}>\r\n              <h4>{day.label}</h4>\r\n            </div>\r\n          ))}\r\n          <button\r\n            onClick={handleNextDays}\r\n            disabled={currentDayIndex + 3 >= days.length}\r\n          >\r\n            &gt;\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"slots\">\r\n          {visibleDays.map((day, index) => (\r\n            <div className=\"day-slots\" key={day.date}>\r\n              <h4>{day.label}</h4>\r\n              {/* Show blank slots for today's date */}\r\n              {index === 0 && currentDayIndex === 0 ? (\r\n                <p className=\"no-slots\">No slots available today</p>\r\n              ) : (\r\n                <>\r\n                  {doctor.availability.slice(0, visibleSlots).map((slot) => (\r\n                    <button key={`${day.date}-${slot.id}`} className=\"slot\">\r\n                      {slot.time}\r\n                    </button>\r\n                  ))}\r\n                  {visibleSlots < doctor.availability.length && (\r\n                    <button onClick={handleShowMoreSlots} className=\"more-slots\">\r\n                      More...\r\n                    </button>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}